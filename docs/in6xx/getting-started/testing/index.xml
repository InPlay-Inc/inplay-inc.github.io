<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Testing and Debuging on InPlay Doc</title><link>/docs/in6xx/getting-started/testing.html</link><description>Recent content in Testing and Debuging on InPlay Doc</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>InPlay Inc</copyright><atom:link href="/docs/in6xx/getting-started/testing/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>/docs/in6xx/getting-started/testing/rtt-viewer-guide.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xx/getting-started/testing/rtt-viewer-guide.html</guid><description>RTT Viewer Guide # Introduction # J-Link RTT Viewer is a Windows GUI application that uses RTT functionality on the debugging host. RTT Viewer can be used independently, opening its own connection to the J-Link and connecting in parallel to the target of the ongoing debugging session or alternatively to it using an existing J-Link connection. The RTT Viewer supports the main functions of RTT:
Terminal output on channel Sending text input to channel Up to 16 virtual terminals with only one target channel Controlling text output Recording data on channel Configuration # Install J-Link # Should setup in-dev\tools\ InPlayToolsSetup.</description></item><item><title>Debug Guide</title><link>/docs/in6xx/getting-started/testing/debug-guide.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xx/getting-started/testing/debug-guide.html</guid><description>Debug Guide # Introduction # Arm Keil MDK (Microcontroller Development Kit) provides robust debugging capabilities that are essential for efficient software development targeting Arm Cortex-M based microcontrollers. This document provides instructions on using the debugging features in Keil.
Debug Step: # Enter debugging and run to main funtion # Enter debug mode, run program from flash to main function.
Open project, double click &amp;ldquo;proj_ble_lp.uvmpw&amp;rdquo; in &amp;ldquo;SDK\in-dev\proj\proj_ble_find_my\build\mdk&amp;rdquo;. Click project option button, select &amp;ldquo;J-Link&amp;rdquo; in &amp;ldquo;Debug&amp;rdquo; page.</description></item><item><title>HCI Command</title><link>/docs/in6xx/getting-started/testing/hci_command.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xx/getting-started/testing/hci_command.html</guid><description>HCI Command # Introduction to BLE HCI Commands # BLE HCI commands are standardized instructions exchanged between the host and the Bluetooth controller to manage and configure Bluetooth communication. These commands enable the host to initiate various actions, such as establishing connections, configuring parameters, and managing the overall behavior of the Bluetooth device.
HCI Command Structure # BLE HCI commands follow a specific structure, adhering to a standardized format that includes an HCI type, opcode, and parameters.</description></item></channel></rss>