<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>BLE on InPlay Doc</title><link>/docs/in6xx/protocol-reference/ble.html</link><description>Recent content in BLE on InPlay Doc</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>InPlay Inc</copyright><atom:link href="/docs/in6xx/protocol-reference/ble/index.xml" rel="self" type="application/rss+xml"/><item><title>GATT Programming Guide</title><link>/docs/in6xx/protocol-reference/ble/gatt-programming-guide.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xx/protocol-reference/ble/gatt-programming-guide.html</guid><description>GATT Programming Guide # Overview # The GATT (Generic Attribute) is a standard profile in BLE protocol which defines a framework of services and characteristics using ATT attributes as building blocks. The ATT protocol defineds a flat set of data structure called attributes, while GATT defines a hierarchy so that the attributes are grouped into primary and secondary services and these services can include characteristics. GATT also defines how a device will discover, read, write, notify, and indicate the characteristics based on ATT attribute access method.</description></item><item><title>Inplay Transparent Data Transmission (TRx) profile User Guide</title><link>/docs/in6xx/protocol-reference/ble/inplay_trx_profile.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xx/protocol-reference/ble/inplay_trx_profile.html</guid><description>Overview # The component documented here is a software component that utilizes BLE GATT protocol to fulfill transparent data transmission over BLE devices. It is based on Inplay BLE application framework and provides set of simple APIs for the convenience of application development. Please refer to GATT Programming Guide for details.
The component consists of the Server and the Client part. The server is composed of GATT based services. It includes two characteristic values with one representing receiving (Rx) and the other representing sending (TX) and a client characteristic configuration descriptor.</description></item></channel></rss>