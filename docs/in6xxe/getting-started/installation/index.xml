<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Installation on InPlay Doc</title><link>/docs/in6xxe/getting-started/installation.html</link><description>Recent content in Installation on InPlay Doc</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>InPlay Inc</copyright><atom:link href="/docs/in6xxe/getting-started/installation/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick Start</title><link>/docs/in6xxe/getting-started/installation/quick-start.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xxe/getting-started/installation/quick-start.html</guid><description>Quick Start Guide # Introduction # This document provides a guide as following:
Install development tools Use the configuration tool Build &amp;ldquo;proj_ble_adv_conn&amp;rdquo; demo project Download image to DK Preparation # InPlay DK Board JLink Debugger InPlay SDK Usb cable. Install Tools # Download and install MDK-ARM Keil ÂµVision (Version 5.21 or later is recommended).
Download and install J-Link Software and Documentation Pack(Version 7.62 or later is recommended).
Install InPlayInc.DeviceFamilyPack. Double click the InPlayInc.</description></item><item><title>Quick Start with GCC</title><link>/docs/in6xxe/getting-started/installation/quick-start-with-gcc.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xxe/getting-started/installation/quick-start-with-gcc.html</guid><description>Quick Start Guide with GCC # Introduction # This document introduce how to use GCC for software development.
Preparation # InPlay DK Board JLink Debugger InPlay SDK Usb cable. Install Tools # Download and install Arm GNU Toolchain (version &amp;ldquo;arm-gnu-toolchain-13.2.rel1-x86_64-arm-none-eabi&amp;rdquo; is recommended).
Install Make
sudo apt-get update sudo apt-get install build-essential Generate configuration File (optional) # Demo projects are in &amp;ldquo;SDK/in-dev/proj&amp;rdquo;. Each project has a configuration file named &amp;ldquo;in_config.h&amp;rdquo;. This file is located in the &amp;ldquo;inc&amp;rdquo; directory of the project.</description></item><item><title>Run Zephyr on IN6XXE</title><link>/docs/in6xxe/getting-started/installation/run-zephyr-on-in6xxe.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xxe/getting-started/installation/run-zephyr-on-in6xxe.html</guid><description>Introduction # Zephyr is an open source RTOS maintained by the Linux foundation, which is designed for connected, resource-constrained embedded devices. It provides a scalable and secure platform for developing IoT and embedded applications.
Inplay has added support including BLE for Zephyr on IN6XXE chips. If you have an IN6XXE DK board(Refer to Introduction to IN6XXE DK), you can run Zephyr BLE samples on it with this guide.
Setup a Zephyr development environment under Windows # It is recommended to develop Zephyr on IN6XXE under Windows.</description></item></channel></rss>