<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development Guide on InPlay Doc</title><link>/docs/in6xxe/development-guide.html</link><description>Recent content in Development Guide on InPlay Doc</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>InPlay Inc</copyright><atom:link href="/docs/in6xxe/development-guide/index.xml" rel="self" type="application/rss+xml"/><item><title>ADC Guide</title><link>/docs/in6xxe/development-guide/adc-guide.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xxe/development-guide/adc-guide.html</guid><description>ADC Guide # Overview # The ADC (Analog-to-Digital Converter) is a crucial component in electronic systems that facilitates the conversion of analog signals into digital values. This process is essential for interfacing with digital systems, microcontrollers, and processors, allowing them to process and interpret real-world analog data.
Key Features # Precision # The ADC operates with a precision of 12 bits, providing a fine resolution for accurate signal representation.</description></item><item><title>Counter Guide</title><link>/docs/in6xxe/development-guide/counter-development-guide.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xxe/development-guide/counter-development-guide.html</guid><description>Counter Guide # Introduction # The counter block contains 4 32-bit identical counters. Each counter can be independently programmed to perform a wide range of functions including frequency measurement, event counting, interval measurement, pulse generation, delay timing and pulse width modulation.
The 6XX series chips have 4 built-in counter modules, corresponding to these 8 pins (GPIO port 2). The counter module can be used to achieve functions like PWM, Timer, IrDa, and 7816.</description></item><item><title>NanoSync Engine Guide</title><link>/docs/in6xxe/development-guide/trigger-handler-guide.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xxe/development-guide/trigger-handler-guide.html</guid><description>NanoSync Engine Guide # Introduction # NanoSync engine(trigger handler block) which can be used to perform many real-time events or tasks without the CPUâ€™s intervention.
The NanoSync engine operates based on triggers and handlers. When a trigger (also called an event) happens, a handler will be invoked. A handler consists of a sequence of hardware actions (also called hardware tasks), which can be automatically executed by the hardware without the CPU intervention.</description></item><item><title>Run Zephyr on IN6XXE</title><link>/docs/in6xxe/development-guide/run-zephyr-on-in6xxe.html</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/docs/in6xxe/development-guide/run-zephyr-on-in6xxe.html</guid><description>Introduction # Zephyr is an open source RTOS maintained by the Linux foundation, which is designed for connected, resource-constrained embedded devices. It provides a scalable and secure platform for developing IoT and embedded applications.
Inplay has added support including BLE for Zephyr on IN6XXE chips. If you have an IN6XXE DK board(Refer to Introduction to IN6XXE DK), you can run Zephyr BLE samples on it with this guide.
Setup a Zephyr development environment under Windows # It is recommended to develop Zephyr on IN6XXE under Windows.</description></item></channel></rss>